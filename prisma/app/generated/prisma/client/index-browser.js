
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.0
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.0",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BusinessScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  store_name: 'store_name',
  slug: 'slug',
  description: 'description',
  url: 'url',
  wallet_address: 'wallet_address',
  commission: 'commission',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  affiliate_hub_description: 'affiliate_hub_description',
  svix_consumer_app_id: 'svix_consumer_app_id',
  stripe_connected_account: 'stripe_connected_account',
  price_plan: 'price_plan',
  trial_ends_at: 'trial_ends_at',
  stripe_customer_id: 'stripe_customer_id',
  stripe_subscription_id: 'stripe_subscription_id',
  payment_preference: 'payment_preference'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  message: 'message',
  type: 'type',
  sent_at: 'sent_at',
  business_id: 'business_id',
  message_id: 'message_id',
  email: 'email',
  name: 'name',
  subject: 'subject',
  parent_id: 'parent_id',
  channel_id: 'channel_id',
  video_id: 'video_id'
};

exports.Prisma.AffiliatesScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at',
  status: 'status',
  wallet_address: 'wallet_address',
  metadata: 'metadata',
  social_media_profiles: 'social_media_profiles'
};

exports.Prisma.Affiliate_BusinessScalarFieldEnum = {
  id: 'id',
  business_id: 'business_id',
  affiliate_id: 'affiliate_id',
  affiliate_link: 'affiliate_link',
  affiliate_link_key: 'affiliate_link_key',
  product_id: 'product_id',
  pipeline_id: 'pipeline_id',
  instagram_scope_identifier: 'instagram_scope_identifier'
};

exports.Prisma.OrdersScalarFieldEnum = {
  id: 'id',
  customer_name: 'customer_name',
  customer_email: 'customer_email',
  customer_address: 'customer_address',
  invoice_url: 'invoice_url',
  order_quantity: 'order_quantity',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  business_id: 'business_id',
  affiliate_id: 'affiliate_id',
  product_id: 'product_id'
};

exports.Prisma.ProductsScalarFieldEnum = {
  name: 'name',
  description: 'description',
  html_description: 'html_description',
  image_url: 'image_url',
  price: 'price',
  price_currency: 'price_currency',
  is_shippable: 'is_shippable',
  price_type: 'price_type',
  created_at: 'created_at',
  updated_at: 'updated_at',
  status: 'status',
  business_id: 'business_id',
  metadata: 'metadata',
  id: 'id'
};

exports.Prisma.PipelinesScalarFieldEnum = {
  id: 'id',
  prompt: 'prompt',
  remark: 'remark',
  status: 'status',
  affiliate_count: 'affiliate_count',
  business_id: 'business_id',
  product_id: 'product_id',
  format: 'format',
  location: 'location',
  heygen_video_id: 'heygen_video_id',
  ig_post_id: 'ig_post_id',
  ig_post_url: 'ig_post_url',
  run_mode: 'run_mode',
  workflow: 'workflow',
  created_at: 'created_at'
};

exports.Prisma.ChatMessageScalarFieldEnum = {
  id: 'id',
  sender: 'sender',
  receiver: 'receiver',
  text: 'text',
  pipeline_id: 'pipeline_id',
  chat_message_status: 'chat_message_status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.WaitlistScalarFieldEnum = {
  id: 'id',
  email: 'email',
  created_at: 'created_at'
};

exports.Prisma.Pending_PaymentsScalarFieldEnum = {
  id: 'id',
  business_id: 'business_id',
  product_id: 'product_id',
  full_amount: 'full_amount',
  fiat_amount: 'fiat_amount',
  crypto_amount: 'crypto_amount',
  payout_date: 'payout_date',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Affiliate_Pending_PaymentsScalarFieldEnum = {
  id: 'id',
  affiliate_id: 'affiliate_id',
  product_id: 'product_id',
  full_amount: 'full_amount',
  fiat_amount: 'fiat_amount',
  crypto_amount: 'crypto_amount',
  payout_date: 'payout_date',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EmbeddingsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  content: 'content',
  resource_id: 'resource_id'
};

exports.Prisma.Ig_chat_historyScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  ig_recipient_id: 'ig_recipient_id',
  message: 'message',
  role: 'role'
};

exports.Prisma.ResourcesScalarFieldEnum = {
  id: 'id',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ig_access_tokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  encryption_iv: 'encryption_iv',
  expires_at: 'expires_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ig_scope_identifiersScalarFieldEnum = {
  id: 'id',
  ig_username: 'ig_username',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.PricePlan = exports.$Enums.PricePlan = {
  Trial: 'Trial',
  Starter: 'Starter',
  Growth: 'Growth',
  Enterprise: 'Enterprise'
};

exports.PaymentPreference = exports.$Enums.PaymentPreference = {
  FullCrypto: 'FullCrypto',
  HalfCryptoHalfFiat: 'HalfCryptoHalfFiat',
  FullFiat: 'FullFiat'
};

exports.PriceType = exports.$Enums.PriceType = {
  Subscription: 'Subscription',
  OneTime: 'OneTime'
};

exports.RunMode = exports.$Enums.RunMode = {
  Manual: 'Manual',
  Auto: 'Auto'
};

exports.Prisma.ModelName = {
  Business: 'Business',
  Messages: 'Messages',
  Affiliates: 'Affiliates',
  Affiliate_Business: 'Affiliate_Business',
  Orders: 'Orders',
  Products: 'Products',
  Pipelines: 'Pipelines',
  ChatMessage: 'ChatMessage',
  Waitlist: 'Waitlist',
  Pending_Payments: 'Pending_Payments',
  Affiliate_Pending_Payments: 'Affiliate_Pending_Payments',
  embeddings: 'embeddings',
  ig_chat_history: 'ig_chat_history',
  resources: 'resources',
  ig_access_token: 'ig_access_token',
  ig_scope_identifiers: 'ig_scope_identifiers'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
