generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
  schemas  = ["public"]
}

model Business {
  id                        String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name                String?
  last_name                 String?
  email                     String               @unique
  store_name                String?
  slug                      String               @unique
  description               String?
  url                       String?
  wallet_address            String?
  commission                Int?
  status                    String               @default("Inactive")
  created_at                DateTime             @default(now())
  updated_at                DateTime             @updatedAt
  affiliate_hub_description String?
  products                  Products[]
  orders                    Orders[]
  affiliate_business        Affiliate_Business[]

  @@schema("public")
}

model Affiliates {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name     String?
  last_name      String?
  email          String   @unique
  description    String?
  url            String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  status         String   @default("Pending") // Pending, Approved and Not Approved
  wallet_address String?

  orders             Orders[]
  affiliate_business Affiliate_Business[]

  @@schema("public")
}

model Affiliate_Business {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business     Business   @relation(fields: [business_id], references: [id])
  business_id  String     @db.Uuid
  affiliate    Affiliates @relation(fields: [affiliate_id], references: [id])
  affiliate_id String     @db.Uuid

  @@unique([business_id, affiliate_id])
  @@index([business_id], name: "business_id")
  @@index([affiliate_id], name: "affiliate_id")
  @@schema("public")
}

model Orders {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_name    String
  customer_email   String
  customer_address String
  invoice_url      String?
  status           String?
  created_at       DateTime    @default(now())
  updated_at       DateTime    @updatedAt
  Business         Business?   @relation(fields: [business_id], references: [id])
  business_id      String?     @db.Uuid
  Products         Products?   @relation(fields: [products_id], references: [id])
  products_id      Int?
  affiliate        Affiliates? @relation(fields: [affiliate_id], references: [id])
  affiliate_id     String?     @db.Uuid

  @@schema("public")
}

model Products {
  id          Int                    @id @default(autoincrement())
  name        String
  description String
  image_url   String?
  price       Float
  created_at  DateTime               @default(now())
  updated_at  DateTime               @updatedAt
  status      String                 @default("Published") // Draft, Published
  metadata    Json?
  embedding   Unsupported("vector")?

  Business    Business? @relation(fields: [business_id], references: [id])
  business_id String?   @db.Uuid
  orders      Orders[]

  @@schema("public")
}

model Waitlist {
  id         String   @id @default(cuid())
  email      String   @unique
  created_at DateTime @default(now())

  @@schema("public")
}
